import json
from config import REPORT_DIR

from recon.async_scanner import NetworkScanner
from exploit.metasploit import ExploitManager
from advising.llm import Advisor


class PenetrationTester:
    def __init__(self, target_subnets):
        self.target_subnets = target_subnets
        self.scanner = NetworkScanner(target_subnets)
        self.exploit_manager = ExploitManager()

    def scan_and_report(self):
        for result in self.scanner.execute_scan():
            target = {'host': result['host'], 'port': result['port']}
            title = ' '.join([result['product'] or result['name'], result['version']]).strip()
            # exploits = self.exploit_manager.exploit_target(target, result['product'] or result['name'], result['version'])

            advisor = Advisor(
                discovery_result=json.dumps(result),
                title=title,
                exploits=[]
                # exploits=exploits
            )

            report_file = REPORT_DIR / f"{title}.html"
            with report_file.open("w") as f:
                f.write(advisor.prepare_report())
